#
# Settings for iptables init script
#
LOOPBACK=127.0.0.0/8

ETH=192.168.1.0/24


# FILTER rules
INPUT="
# CONNECTION state
-m conntrack --ctstate INVALID -j DROP
i:eth0 dst:$ETH -m conntrack --ctstate RELATED,ESTABLISHED

# ICMP
i:eth0 icmp:echo-request src:$ETH dst:$ETH c:Allow_PING_in_for_eth0_network
i:lo src:$LOOPBACK dst:$LOOPBACK c:Allow_Loopback

# PORT RULES
udp dp:68 c:Allow_DHCP_server_in_from_all

i:eth0 dst:$ETH tcp dp:22 c:Allow_SSH_in_for_eth0
i:eth0 src:$ETH dst:$ETH tcp dp:53 c:Allow_DNS_in_for_eth0
i:eth0 src:$ETH dst:$ETH udp dp:53 c:Allow_DNS_in_for_eth0
i:eth0 src:$ETH dst:$ETH udp dp:123 c:Allow_NTP_in_for_eth0
"

OUTPUT="
-m conntrack --ctstate INVALID -j DROP
o:eth0 src:$ETH -m conntrack --ctstate RELATED,ESTABLISHED

o:eth0 icmp:echo-request src:$ETH c:Allow_ICMP_out_from_eth0
o:lo src:$LOOPBACK dst:$LOOPBACK c:Allow_Loopback

udp dp:67 c:Allow_DHCP_server_out_from_all

o:eth0 src:$ETH tcp dp:53 c:Allow_DNS_out_from_eth0
o:eth0 src:$ETH udp dp:53 c:Allow_DNS_out_from_eth0
o:eth0 src:$ETH udp dp:80 c:Allow_HTTP_out_from_eth0
o:eth0 src:$ETH udp dp:123 c:Allow_NTP_out_from_eth0
"

FORWARD="
-m conntrack --ctstate INVALID -j DROP
-m conntrack --ctstate RELATED,ESTABLISHED
icmp c:Allow_ICMP_routing

tcp dp:20-21 c:Allow_FTP_routing
tcp dp:22 c:Allow_SSH_routing
tcp dp:43 c:Allow_WHOIS_routing
tcp dp:80 c:Allow_HTTP_routing
tcp dp:443 c:Allow_HTTPs_routing
tcp dp:993 c:Allow_IMAPs_routing
tcp dp:8000 c:Allow_HTTP-ALT_routing
"

# NAT rules
PREROUTING="
"

POSTROUTING="
i:eth0 src:$ETH j:MASQUERADE c:Masquerade_connection_from_ETH_network 
"

# Manual command (do not specify 'iptables' just put the following option)
COMMANDS="
"


### Global setting
# [boolean ] This boolean define if this host is a router, and load more rules consequently
#IS_ROUTER=$(sysctl --values net.ipv4.ip_forward)

# [string] Override the default rules action when no jump command is given
#DEFAULT_ACTION=ACCEPT

# [string] Override the default table
#DEFAULT_TABLE=filter


### SECURITY settings
# [boolean]Â Toggle all security features
IS_SECURITY_ENABLED=1

# [boolean] Load an anti ddos rules set in a new chain named DDOS_PROTECT
SECURITY_DDOS_RULES=1

# [string] List of anti ddos rules
DDOS_RULES="
# drop incorrect flag
tcp --tcp-flags ALL ALL -j DROP
tcp --tcp-flags ALL NONE -j DROP

# drop SYN+FIN
tcp --tcp-flags SYN,FIN SYN,FIN -m limit --limit 1/s --limit-burst 5 -j RETURN
tcp --tcp-flags SYN,FIN SYN,FIN -j DROP

# drop too more SYN
tcp --syn -m limit --limit 1000/s --limit-burst 100 -j RETURN
tcp --syn -j DROP

# drop too more tcp RST
tcp --tcp-flags FIN,SYN,RST,ACK RST -m limit --limit 1/s --limit-burst 5 -j RETURN
tcp --tcp-flags FIN,SYN,RST,ACK RST -j DROP

# drop too more tcp FIN
tcp --tcp-flags ALL FIN -m limit --limit 1000/s --limit-burst 100 -j RETURN
tcp --tcp-flags ALL FIN -j DROP
"

# [boolean] Load an icmp protection rules set in a new chain named ICMP_PROTECT
SECURITY_ICMP_RULES=1

# [string] List of icmp protection rules
ICMP_RULES="
icmp --icmp-type echo-request -m limit --limit 1/s --limit-burst 5 -j RETURN
icmp --icmp-type echo-request -j DROP
icmp --fragment -j DROP
"



### Script options
# [Integer] Number of second to wait before re apply old rules when 'test' command is launch
#TIMEOUT_FOR_TEST=5


# List of service name whose needs to be restart after firewall restarting
# WARNING: this variable is sourced only by the service script
#SERVICES="fail2ban"





# Don't touch this vars
IF_CONFIG_SOURCED=1
